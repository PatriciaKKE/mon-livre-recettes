version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "80:80"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgres://user:password@db:5432/mydatabase
      SECRET_KEY: your_secret_key_here
      DEBUG: "True"
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  nginx:
    image: nginx:alpine
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf

    ports:
      - "8080:80" # Mappe le port 80 de Nginx à un port de l'hôte (peut être différent si le frontend utilise déjà le port 80)
    depends_on:
      - frontend
      - backend

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # Monte la configuration Prometheus
      - prometheus_data:/prometheus # Volume persistant pour les données de Prometheus
    ports:
      - "9090:9090" # Mappe le port 9090 de Prometheus au port 9090 de l'hôte

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana # Volume persistant pour les données de Grafana
    ports:
      - "3000:3000" # Mappe le port 3000 de Grafana au port 3000 de l'hôte

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
